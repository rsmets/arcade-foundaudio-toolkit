name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12, 3.13]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e ".[dev]"

    - name: Set up test environment
      run: |
        # Set the public Supabase key for testing
        echo "SUPABASE_ANON_KEY=sb_publishable_4L_ms4VzC-6HXYgq90P3Nw_1AGhi3Hm" >> $GITHUB_ENV

    - name: Lint with ruff
      run: |
        ruff check foundaudio/ tests/

    - name: Type check with mypy
      run: |
        mypy foundaudio/

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=foundaudio --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        pip install twine
        twine check dist/*
